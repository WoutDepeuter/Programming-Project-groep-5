const express = require('express');
const mysql = require('mysql2');
const app = express();

// Set EJS as the view engine
app.set('view engine', 'ejs');
app.set('views', path.join(__dirname,'frontend', 'views'));
// Middleware to serve static files
app.use(express.static('public'));
app.use(express.static(__dirname + '/public'));
// Route to render the index page
app.get('/', (req, res) => {
    res.render('index');
});

app.get('/audio', (req, res) => {
    pool.query('SELECT * FROM PRODUCTMODEL WHERE Cat_ID = ?', [1], (err, results) => {
        if (err) {
            console.error('Error fetching products:', err);
            // Render an error page or handle the error appropriately
            res.status(500).send('Internal Server Error');
            return;
        }
        res.render('/productenadmin/producten', { products: results });
    });
});
// Route to render the productenbelichting page
app.get('/belichting', (req, res) => {
    pool.query('SELECT * FROM PRODUCTMODEL WHERE Cat_ID = ?', [2], (err, results) => {
        if (err) {
            console.error('Error fetching products:', err);
            // Render an error page or handle the error appropriately
            res.status(500).send('Internal Server Error');
            return;
        }
        res.render('productenbelichting', { products: results });
    });
});
app.get('/varia', (req, res) => {
    pool.query('SELECT * FROM PRODUCTMODEL WHERE Cat_ID = ?', [3], (err, results) => {
        if (err) {
            console.error('Error fetching products:', err);
            // Render an error page or handle the error appropriately
            res.status(500).send('Internal Server Error');
            return;
        }
        res.render('productenvaria', { products: results });
    });
});
app.get('/xr', (req, res) => {
    pool.query('SELECT * FROM PRODUCTMODEL WHERE Cat_ID = ?', [5], (err, results) => {
        if (err) {
            console.error('Error fetching products:', err);
            res.status(500).send('Internal Server Error');
            return;
        }
        res.render('productenxr', { products: results });
    });
});
app.get('/video', (req, res) => {
    pool.query('SELECT * FROM PRODUCTMODEL WHERE Cat_ID = ?', [4], (err, results) => {
        if (err) {
            console.error('Error fetching products:', err);
            // Render an error page or handle the error appropriately
            res.status(500).send('Internal Server Error');
            return;
        }
        res.render('productenvideo', { products: results });
    });
});


const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});

